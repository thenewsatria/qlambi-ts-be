// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                  Int       @id @default(autoincrement())
  email               String    @unique
  username            String    @unique
  password            String
  role                String    @default("USER")
  token               Token?
  previousToken       UsedToken?
  colorAssigned       ColorsOnProducts[]
  products            Product[]
  colors              Color[]
  productSizes        Size[]
  itemsCreated        Item[]
  printMethodCreated  PrintMethod[]
  createdAt            DateTime  @default(now())
  updatedAt           DateTime  @updatedAt
}

model Token {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail     String    @unique
  refreshToken  String    @db.VarChar(255) //prisma default is 191, while token length vary, so modified using db.Varchar with specified length
  IP            String
  userAgent     String
  isBlocked     Boolean
  isInvalidated Boolean
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
}

model UsedToken {
  id                Int       @id @default(autoincrement())
  user              User      @relation(fields: [userEmail], references: [email], onDelete: Cascade)
  userEmail         String    @unique
  usedRefreshToken  String    @db.VarChar(255) //prisma default is 191, while token length vary, so modified using db.Varchar with specified length
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Product {
  id                Int       @id @default(autoincrement())
  productName       String
  productClass      String
  productType       String
  material          String
  description       String
  availableColors   ColorsOnProducts[]
  availableSizes    Size[]
  itemsRelated      Item[]
  creator           User?     @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail         String?
  isActive          Boolean   @default(true)
  deactivatedAt     DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model Color {
  id                Int       @id @default(autoincrement())
  colorName         String
  hexValue          String
  description       String
  productsRelated   ColorsOnProducts[]
  itemsRelated      Item[]
  creator           User?      @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail         String?
  isActive          Boolean   @default(true)
  deactivatedAt     DateTime?
  createdAt         DateTime  @default(now())
  updatedAt         DateTime  @updatedAt
}

model ColorsOnProducts {
  color       Color @relation(fields: [colorId], references: [id], onDelete: Cascade)
  colorId     Int
  product     Product @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId   Int
  assignedAt  DateTime @default(now())
  assignedBy  User? @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail   String? 

  @@id([colorId, productId])
}

model Size {
  id              Int         @id @default(autoincrement())
  sizeName        String
  sizeCategory    String
  length          Int
  width           Int
  description     String
  itemsRelated    Item[]
  creator         User?      @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail       String?
  product         Product     @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId       Int    
  isActive        Boolean     @default(true)
  deactivatedAt   DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model Item {
  id              Int         @id @default(autoincrement())
  itemCode        String      @unique
  itemName        String
  product         Product?    @relation(fields: [productId], references: [id], onDelete: SetNull)
  productId       Int?
  color           Color?      @relation(fields: [colorId], references: [id], onDelete: SetNull)
  colorId         Int?
  size            Size?       @relation(fields: [sizeId], references: [id], onDelete: SetNull)
  sizeId          Int?
  price           Int
  itemImages      Json
  stock           Int
  description     String
  creator         User?       @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail       String?
  isActive        Boolean     @default(true)
  deactivatedAt   DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}

model PrintMethod {
  id              Int         @id @default(autoincrement())
  printMethodName String
  description     String
  creator         User?       @relation(fields: [userEmail], references: [email], onDelete: SetNull)
  userEmail       String?
  isActive        Boolean     @default(true)
  deactivatedAt   DateTime?
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
}